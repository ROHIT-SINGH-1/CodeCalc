{"version":3,"file":"extension.js","mappings":"yvBAEA,kBAGA,IAAIA,EAFS,EAAQ,IAIrB,oBAAyBC,GACvB,IAAIC,EAAaC,EAAOC,SAASC,gBAAgB,YAAY,KAC3D,GAAIL,EAEFA,EAAgBM,UAChBN,OAAkBO,MACb,CAELP,EAAkBG,EAAOK,OAAOC,mBAC9B,aACA,aACAN,EAAOO,WAAWC,IAClB,CAAEC,eAAe,IAGnB,MAAMC,EA8BH,izLA5BHb,EAAgBc,QAAQC,KAAOF,EAG/Bb,EAAgBgB,cAAa,KAC3BhB,OAAkBO,CAAS,GAE/B,KAIF,MAAMU,EAAgBd,EAAOK,OAAOU,oBAClCf,EAAOgB,mBAAmBC,MAC1B,KAEFH,EAAcI,KAAO,iBACrBJ,EAAcK,QAAU,aACxBL,EAAcM,QAAU,aACxBN,EAAcO,OAEdvB,EAAQwB,cAAcC,KAAKxB,EAAYe,GAEvCU,QAAQC,IAAI,kCACd,C,UC9CAC,EAAOC,QAAUC,QAAQ,S,SCAzBF,EAAOC,QAAUC,QAAQ,O,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqB5B,IAAjB6B,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAO,EAAoBF,GAAUG,KAAKT,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://CodeCalc/./src/extension.ts","webpack://CodeCalc/external commonjs \"vscode\"","webpack://CodeCalc/external node-commonjs \"path\"","webpack://CodeCalc/webpack/bootstrap","webpack://CodeCalc/webpack/startup"],"sourcesContent":["/** @format */\n\nimport * as vscode from \"vscode\";\nconst path = require('path');\n\nlet calculatorPanel: vscode.WebviewPanel | undefined;\n\nexport function activate(context: vscode.ExtensionContext) {\n  let disposable = vscode.commands.registerCommand(\"CodeCalc\", () => {\n    if (calculatorPanel) {\n      // If the calculator is open, close it\n      calculatorPanel.dispose();\n      calculatorPanel = undefined;\n    } else {\n      // If the calculator is not open, create a new webview panel\n      calculatorPanel = vscode.window.createWebviewPanel(\n        \"CALCULATOR\",\n        \"CALCULATOR\",\n        vscode.ViewColumn.Two, // Open in the second column (you can change it to your preferred column)\n        { enableScripts: true }\n      );\n\n      const htmlContent = getCalculatorHTML(calculatorPanel, context);\n\n      calculatorPanel.webview.html = htmlContent;\n\n      // Dispose the panel when it is closed by the user\n      calculatorPanel.onDidDispose(() => {\n        calculatorPanel = undefined;\n      });\n    }\n  });\n\n  // Create a status bar item with the calculator icon\n  const statusBarItem = vscode.window.createStatusBarItem(\n    vscode.StatusBarAlignment.Right,\n    100\n  );\n  statusBarItem.text = \"$(symbol-math)\";\n  statusBarItem.tooltip = \"CALCULATOR\";\n  statusBarItem.command = \"CALCULATOR\";\n  statusBarItem.show();\n\n  context.subscriptions.push(disposable, statusBarItem);\n\n  console.log(\"Calculator extension activated!\");\n}\n\nfunction getCalculatorHTML(\n  panel: vscode.WebviewPanel,\n  context: vscode.ExtensionContext\n) {\n  return `\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset=\"UTF-8\" />\n        <title>Calculator</title>\n\t\t<meta\n\t\thttp-equiv=\"Content-Security-Policy\"\n\t\tcontent=\"script-src 'self' 'unsafe-inline' vscode-resource:; object-src 'self';\"\n\t  />\n      </head>\n      <style>\n\t\t:root {\n\t\t  --scale: 1px;\n\t\t  --window-height: calc(322 * var(--scale));\n\t\t  --window-width: calc(232 * var(--scale));\n\t\t  --calculator-border-radius: 10px;\n\t\t}\n\t\tbody {\n\t\t  box-sizing: border-box;\n\t\t  font-family: Helvetica, Arial, sans-serif;\n\t\t  overflow-x: hidden;\n\t\t  overflow-y: hidden;\n\t\t  background-color: transparent;\n\t\t  -webkit-user-select: none; /* Safari */\n\t\t  -ms-user-select: none; /* IE 10 and IE 11 */\n\t\t  user-select: none; /* Standard syntax */\n\t\t  position: relative;\n\t\t}\n\t\n\t\ttable {\n\t\t  table-layout: fixed;\n\t\t  width: var(--window-width);\n\t\t}\n\t\n\t\ttd {\n\t\t  height: calc(var(--window-height) / 7);\n\t\t  background-color: #8f7d9f;\n\t\t  text-align: center;\n\t\t  border: calc(var(--scale) * 0.5) solid #432655;\n\t\t  color: white !important;\n\t\t  font-size: calc(22 * var(--scale));\n\t\t  width: 10px !important ;\n\t\t}\n\t\n\t\ttd:hover {\n\t\t  background-color: #a89db2;\n\t\t}\n\t\n\t\ttr:nth-child(2) td {\n\t\t  background-color: #543b66 !important;\n\t\t}\n\t\n\t\ttr:nth-child(2) td:hover {\n\t\t  background-color: #8f7d9f !important;\n\t\t}\n\t\n\t\ttr td:last-child {\n\t\t  background-color: orange !important;\n\t\t}\n\t\n\t\ttr:last-child td:first-child {\n\t\t  border-radius: 0 0 0 var(--calculator-border-radius);\n\t\t}\n\t\n\t\ttr:last-child td:last-child {\n\t\t  border-radius: 0 0 var(--calculator-border-radius) 0;\n\t\t}\n\t\n\t\ttr td:last-child:hover {\n\t\t  background-color: #cb7d07 !important;\n\t\t}\n\t\n\t\t#display {\n\t\t  height: calc(var(--window-height) * 7 / 28 - 2px) !important;\n\t\t  text-align: right;\n\t\t  background-color: #3f2655 !important;\n\t\t  padding-right: 20px;\n\t\t  font-size: calc(56 * var(--scale));\n\t\t  font-weight: 100;\n\t\t  border-radius: var(--calculator-border-radius)\n\t\t\tvar(--calculator-border-radius) 0 0;\n\t\t  vertical-align: bottom;\n\t\t}\n\t\n\t\ttr:last-child td {\n\t\t  /* background-color: red!important; */\n\t\t  height: calc(var(--window-height) / 7 + 2px) !important;\n\t\t}\n\t  </style>\n\t\n\t  <body sandbox=\"allow-scripts allow-same-origin\">\n\t\t<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"calc\">\n\t\t  <tr>\n\t\t\t<td colspan=\"4\" class=\"calc-display\" id=\"display\">0</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td class=\"calc-button\" id=\"clear\">C</td>\n\t\t\t<td class=\"calc-button\" id=\"plus-minus\">±</td>\n\t\t\t<td class=\"calc-button\" id=\"percentage\">%</td>\n\t\t\t<td class=\"calc-button\" id=\"divide\">&divide;</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td class=\"calc-button\" id=\"seven\">7</td>\n\t\t\t<td class=\"calc-button\" id=\"eight\">8</td>\n\t\t\t<td class=\"calc-button\" id=\"nine\">9</td>\n\t\t\t<td class=\"calc-button\" id=\"multiply\">&times;</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td class=\"calc-button\" id=\"four\">4</td>\n\t\t\t<td class=\"calc-button\" id=\"five\">5</td>\n\t\t\t<td class=\"calc-button\" id=\"six\">6</td>\n\t\t\t<td class=\"calc-button\" id=\"subtract\">&minus;</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td class=\"calc-button\" id=\"one\">1</td>\n\t\t\t<td class=\"calc-button\" id=\"two\">2</td>\n\t\t\t<td class=\"calc-button\" id=\"three\">3</td>\n\t\t\t<td class=\"calc-button\" id=\"add\">+</td>\n\t\t  </tr>\n\t\t  <tr>\n\t\t\t<td colspan=\"2\" class=\"calc-button\" id=\"zero\">0</td>\n\t\t\t<td class=\"calc-button\" id=\"decimal\">.</td>\n\t\t\t<td class=\"calc-button\" id=\"equals\">=</td>\n\t\t  </tr>\n\t\t</table>\n\t\t<script>\n\t\t// Get all the button elements\n\t\tconst buttons = document.querySelectorAll(\".calc-button\");\n\t\t// Get the display element\n\t\tconst display = document.querySelector(\".calc-display\");\n  \n\t\tlet firstOperand = null;\n\t\tlet operator = null;\n\t\tlet currentOperand = \"\";\n  \n\t\t// Add click event listeners to all buttons\n\t\tbuttons.forEach((button) => {\n\t\t  button.addEventListener(\"click\", (event) => {\n\t\t\t// Get the value of the button that was clicked\n\t\t\tconst target = event.target;\n\t\t\tconst value = target.innerText;\n  \n\t\t\tif (target.id === \"clear\") {\n\t\t\t  firstOperand = null;\n\t\t\t  operator = null;\n\t\t\t  currentOperand = \"\";\n\t\t\t  display.innerText = \"0\";\n\t\t\t} else if (target.id === \"plus-minus\") {\n\t\t\t  display.innerText = -1 * display.innerText;\n\t\t\t} else if (target.id === \"percentage\") {\n\t\t\t  display.innerText = parseFloat(display.innerText) / 100;\n\t\t\t} else if (\n\t\t\t  target.id === \"divide\" ||\n\t\t\t  target.id === \"multiply\" ||\n\t\t\t  target.id === \"subtract\" ||\n\t\t\t  target.id === \"add\"\n\t\t\t) {\n\t\t\t  operator = value;\n\t\t\t  firstOperand = parseFloat(display.innerText);\n\t\t\t  currentOperand = \"\";\n\t\t\t} else if (target.id === \"equals\") {\n\t\t\t  if (operator) {\n\t\t\t\tconst secondOperand = parseFloat(display.innerText);\n\t\t\t\tconsole.log(firstOperand, secondOperand, operator);\n\t\t\t\tif (operator === \"+\") {\n\t\t\t\t  firstOperand = firstOperand + secondOperand;\n\t\t\t\t} else if (operator === \"−\") {\n\t\t\t\t  firstOperand = firstOperand - secondOperand;\n\t\t\t\t} else if (operator === \"\\u00D7\") {\n\t\t\t\t  firstOperand = firstOperand * secondOperand;\n\t\t\t\t} else if (operator === \"\\u00F7\") {\n\t\t\t\t  firstOperand = firstOperand / secondOperand;\n\t\t\t\t}\n\t\t\t\toperator = null;\n\t\t\t\tcurrentOperand = firstOperand.toString();\n\t\t\t\tdisplay.innerText = firstOperand;\n\t\t\t  }\n\t\t\t} else {\n\t\t\t  if (value === \".\" && currentOperand.includes(\".\")) {\n\t\t\t\treturn;\n\t\t\t  }\n\t\t\t  currentOperand += value;\n\t\t\t  display.innerText = currentOperand;\n\t\t\t}\n\t\t\tconsole.log(operator);\n\t\t  });\n\t\t});</script>\n\t  </body>\n\t</html>\n\t\n    `;\n}\n","module.exports = require(\"vscode\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(172);\n"],"names":["calculatorPanel","context","disposable","vscode","commands","registerCommand","dispose","undefined","window","createWebviewPanel","ViewColumn","Two","enableScripts","htmlContent","webview","html","onDidDispose","statusBarItem","createStatusBarItem","StatusBarAlignment","Right","text","tooltip","command","show","subscriptions","push","console","log","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}